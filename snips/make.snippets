# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
# base

snippet base
	.PHONY: clean, mrproper
	CC = gcc
	CFLAGS = -g -Wall

	all: $1

	%.o: %.c
		$(CC) $(CFLAGS) -c -o $@ $<
	
	${1:out}: $1.o
		$(CC) $(CFLAGS) -o $@ $+

	clean:
		rm -f *.o core.*

	mrproper: clean
		rm -f $1
endsnippet
# add
snippet add
${1:out}: $1.o
	$(CC) $(CFLAGS) -o $@ $+
endsnippet
# print
snippet print
	print-%: ; @echo $*=$($*)
endsnippet
# ifeq
snippet if
	ifeq (${1:cond0}, ${2:cond1})
		${0:${VISUAL}}
	endif
endsnippet
# ifeq ... else ... endif
snippet ife
	ifeq (${1:cond0}, ${2:cond1})
		${3:${VISUAL}}
	else
		${0}
	endif
endsnippet
# else ...
snippet el
	else
		${0:${VISUAL}}
endsnippet
# .DEFAULT_GOAL := target
snippet default
	.DEFAULT_GOAL := ${1}
endsnippet
# help target for self-documented Makefile
snippet help
	help: ## Prints help for targets with comments
		@cat $(MAKEFILE_LIST) | grep -E '^[a-zA-Z_-]+:.*?## .*$$' | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $\$1, $\$2}'
	${0}
